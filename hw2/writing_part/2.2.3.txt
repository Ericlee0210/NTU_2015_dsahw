first, counting both numbers of nodes in L and M,
if number of nodes are not same, L and M are not same.

Second, if the numbers of nodes are same,
then make sure the content of nodes in L is totally as orderly same as M. 

N = numbers of nodes of L
for  counting=0  to  counting=N
	if L.back()!=M.back()
		L.advance()
		counting++
	else
		CCL a(L)  //deep copy
		CCL b(M)  //deep copy
		while 1
			if( a.front!=b.front() )
				L.advance()
				counting++
				break
			else
				a.advance()
				b.advance()
				i++
				if i=N-1
					return 1
return 0
